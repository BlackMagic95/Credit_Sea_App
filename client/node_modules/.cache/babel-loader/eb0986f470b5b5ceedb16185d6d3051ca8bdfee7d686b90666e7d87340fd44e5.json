{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohan\\\\OneDrive\\\\Desktop\\\\Credit_App\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// client/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport UploadForm from \"./components/UploadForm\";\nimport ReportCard from \"./components/ReportCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [reports, setReports] = useState(null); // null = not loaded yet\n\n  useEffect(() => {\n    async function load() {\n      try {\n        const res = await fetch(\"http://localhost:5000/reports\");\n        const data = await res.json();\n        setReports(Array.isArray(data) ? data : []);\n      } catch (err) {\n        console.error(\"Failed to fetch reports:\", err);\n        setReports([]); // fallback to empty array\n      }\n    }\n    load();\n  }, []);\n  const addReport = report => setReports(prev => prev ? [report, ...prev] : [report]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"CreditSea Report Viewer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadForm, {\n      onUploadSuccess: addReport\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), reports === null ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading reports\\u2026\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : reports.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"#ccc\"\n      },\n      children: \"No reports found. Upload an XML to get started.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : reports.map((report, idx) => /*#__PURE__*/_jsxDEV(ReportCard, {\n      report: report\n    }, idx, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"52n9h57bCyrMdYBxgghSgzQoFNQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","UploadForm","ReportCard","jsxDEV","_jsxDEV","App","_s","reports","setReports","load","res","fetch","data","json","Array","isArray","err","console","error","addReport","report","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onUploadSuccess","length","style","color","map","idx","_c","$RefreshReg$"],"sources":["C:/Users/rohan/OneDrive/Desktop/Credit_App/client/src/App.js"],"sourcesContent":["// client/src/App.js\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport UploadForm from \"./components/UploadForm\";\nimport ReportCard from \"./components/ReportCard\";\n\nfunction App() {\n  const [reports, setReports] = useState(null); // null = not loaded yet\n\n  useEffect(() => {\n    async function load() {\n      try {\n        const res = await fetch(\"http://localhost:5000/reports\");\n        const data = await res.json();\n        setReports(Array.isArray(data) ? data : []);\n      } catch (err) {\n        console.error(\"Failed to fetch reports:\", err);\n        setReports([]); // fallback to empty array\n      }\n    }\n    load();\n  }, []);\n\n  const addReport = (report) => setReports(prev => (prev ? [report, ...prev] : [report]));\n\n  return (\n    <div className=\"App\">\n      <h1>CreditSea Report Viewer</h1>\n      <UploadForm onUploadSuccess={addReport} />\n\n      {reports === null ? (\n        <p>Loading reportsâ€¦</p>\n      ) : reports.length === 0 ? (\n        <p style={{ color: \"#ccc\" }}>No reports found. Upload an XML to get started.</p>\n      ) : (\n        reports.map((report, idx) => <ReportCard key={idx} report={report} />)\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAClB,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,UAAU,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE9CC,SAAS,CAAC,MAAM;IACd,eAAeS,IAAIA,CAAA,EAAG;MACpB,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,+BAA+B,CAAC;QACxD,MAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAI,CAAC,CAAC;QAC7BL,UAAU,CAACM,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,GAAGA,IAAI,GAAG,EAAE,CAAC;MAC7C,CAAC,CAAC,OAAOI,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEF,GAAG,CAAC;QAC9CR,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;MAClB;IACF;IACAC,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,SAAS,GAAIC,MAAM,IAAKZ,UAAU,CAACa,IAAI,IAAKA,IAAI,GAAG,CAACD,MAAM,EAAE,GAAGC,IAAI,CAAC,GAAG,CAACD,MAAM,CAAE,CAAC;EAEvF,oBACEhB,OAAA;IAAKkB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBnB,OAAA;MAAAmB,QAAA,EAAI;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAChCvB,OAAA,CAACH,UAAU;MAAC2B,eAAe,EAAET;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEzCpB,OAAO,KAAK,IAAI,gBACfH,OAAA;MAAAmB,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GACrBpB,OAAO,CAACsB,MAAM,KAAK,CAAC,gBACtBzB,OAAA;MAAG0B,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAO,CAAE;MAAAR,QAAA,EAAC;IAA+C;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAEhFpB,OAAO,CAACyB,GAAG,CAAC,CAACZ,MAAM,EAAEa,GAAG,kBAAK7B,OAAA,CAACF,UAAU;MAAWkB,MAAM,EAAEA;IAAO,GAApBa,GAAG;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CAAC,CACtE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACrB,EAAA,CAjCQD,GAAG;AAAA6B,EAAA,GAAH7B,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}